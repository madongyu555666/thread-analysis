1.IM通讯，前端后端是怎么交互的
就是问websocket技术
地址：http://www.52im.net/thread-331-1-1.html


2.websocket通讯
3.netty的半包，拆包粘包。
4.netty的线程模型
5.mybatis中#和&号的区别
简述
在Mybatis的SQL xml映射文件中，有关参数传递的方法有两种，分别为#{}和${}。而这两种方式之间存在一定的差异。

默认情况下，使用#{}格式的语法会导致Mybatis创建PreparedStatement参数并安全地设置参数（就像使用?一样）。这样做更安全，更迅速，通常也是首选做法，不过有时你就是想直接在SQL语句中插入一个不转义的字符串。比如，像ORDER BY，你可以和这样来使用：ORDER BY ${columnName}

#{}表示一个占位符号
主要有以下几点功能：

通过#{}可以实现preparedStatement向占位符中设置值，自动进行Java类型和jdbc类型转换。
#{}可以有效的防止SQL注入。
#{}可以接收键类型值或者pojo属性值。
如果parameterType传给单个简单类型值，#{}括号中可以是value或其他名称。
${}表示拼接SQL串
通过${}可以将parameterType传入的内容拼接在SQL中而不进行jdbc类型转换。
可以接收简单类型值或pojo属性值，如果parameterType传输单个简单类型值，${}中只能是value
MyBatis排序时使用order by 动态参数时需要注意，用${}而不是#{}


6.分布式事物是怎么做的，实现原理。
7.代理的实现方式
8.怎么理解控制反转（IOC），依赖注入（DI），切面编程（AOP）
9.spring三大核心的源码
10.spring的事物是怎么实现的
11.mongodb的基本储存结构
12.mysql的索引优化规则
13.mysql的索引原理
14.创建线程的方式
15.线程之间是怎么进行通讯的
16.arraylist和linkedlist原理，是否是线程安全的，不安全的话，哪些是安全的
17.mybatis批量是怎么实现的
18.遍历map有几种方式，每种方式是怎么实现的
19.多线程情况下，进行i++是线程安全的吗，为什么，（考察线程一致性问题volatile）
20.使用arraylist保存对象例如：ArrayList<Object> ,遍历这个list是删除里边的对象可以吗？为什么
21.IM的整体架构，各个部分是怎么实现的。特别注意是前端（APP，PC）是怎么通过网关和后端交互。
22.mysql常用优化的方法，原理
23.map和线程安全的map的原理，数据结构，里边的算法（源码）
24.mybatis里的事物是怎么实现的
25.微服务，dubbo，springboot，springcloud各个组件得了解，最好知道源码
26.关于项目的介绍，最好组织一下语言，介绍项目的整体架构要清晰。
27.介绍一下，用户发送消息，到netty，在到业务层，的整体流程（其实是考察的netty流程源码，和整体流程）
28.遇到IM的内存溢出的问题，是怎么解决的，还有遇到其他的问题，是怎么解决的
29.有多少设计模式，介绍几个，（最好就是介绍spring里的，使用spring源码举例）
30.都有什么锁，每个所锁介绍一下
31.怎么理解hash的一致性
